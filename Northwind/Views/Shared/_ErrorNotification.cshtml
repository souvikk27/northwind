@if (!ViewData.ModelState.IsValid || TempData["ErrorMessage"] != null)
{
    <div id="error-notification" class="fixed right-4 top-24 flex w-full max-w-sm overflow-hidden rounded-lg bg-white shadow-md transition-opacity duration-500">
        <div class="flex w-12 items-center justify-center bg-red-500">
            <svg class="h-6 w-6 fill-current text-white" viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg">
                <path d="M20 3.36667C10.8167 3.36667 3.3667 10.8167 3.3667 20C3.3667 29.1833 10.8167 36.6333 20 36.6333C29.1834 36.6333 36.6334 29.1833 36.6334 20C36.6334 10.8167 29.1834 3.36667 20 3.36667ZM19.1334 33.3333V22.9H13.3334L21.6667 6.66667V17.1H27.25L19.1334 33.3333Z"/>
            </svg>
        </div>
        <div class="-mx-3 px-4 py-2">
            <div class="mx-3">
                <span class="font-semibold text-red-500">Error</span>
                @if (TempData["ErrorMessage"] != null)
                {
                    <p class="text-sm text-gray-600">@TempData["ErrorMessage"]</p>
                }
                <ul class="text-sm text-gray-600">
                    @foreach (var modelState in ViewData.ModelState.Values)
                    {
                        foreach (var error in modelState.Errors)
                        {
                            <li>@error.ErrorMessage</li>
                        }
                    }
                </ul>
            </div>
        </div>
    </div>


    <script>
        setTimeout(function() {
                var notification = document.getElementById('error-notification');
                notification.classList.add('opacity-0');
                setTimeout(function() {
                        notification.style.display = 'none';
                    },
                    1500);
            },
            1500);
    </script>
}